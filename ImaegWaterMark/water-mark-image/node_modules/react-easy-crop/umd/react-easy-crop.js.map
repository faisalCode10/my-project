{"version":3,"file":"react-easy-crop.js","sources":["../../src/helpers.ts","../../src/Cropper.tsx"],"sourcesContent":["import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  containerWidth: number,\n  containerHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = rotateSize(mediaWidth, mediaHeight, rotation)\n  const fittingWidth = Math.min(width, containerWidth)\n  const fittingHeight = Math.min(height, containerHeight)\n\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight,\n    }\n  }\n\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect,\n  }\n}\n\n/**\n * Compute media zoom.\n * We fit the media into the container with \"max-width: 100%; max-height: 100%;\"\n */\nexport function getMediaZoom(mediaSize: MediaSize) {\n  // Take the axis with more pixels to improve accuracy\n  return mediaSize.width > mediaSize.height\n    ? mediaSize.width / mediaSize.naturalWidth\n    : mediaSize.height / mediaSize.naturalHeight\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n\n  return clamp(position, -maxPosition, maxPosition)\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition ? limitArea : noOp\n\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  // calculate the crop area in percentages\n  // in the rotated space\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaBBoxSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaBBoxSize.width) *\n        100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaBBoxSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) /\n        mediaBBoxSize.height) *\n        100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaBBoxSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaBBoxSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.width,\n      (croppedAreaPercentages.width * mediaNaturalBBoxSize.width) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.height,\n      (croppedAreaPercentages.height * mediaNaturalBBoxSize.height) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaNaturalBBoxSize.width >= mediaNaturalBBoxSize.height * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to image height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.width - sizePixels.width,\n        (croppedAreaPercentages.x * mediaNaturalBBoxSize.width) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.height - sizePixels.height,\n        (croppedAreaPercentages.y * mediaNaturalBBoxSize.height) / 100\n      )\n    ),\n  }\n\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPercentages.\n */\nexport function getInitialCropFromCroppedAreaPercentages(\n  croppedAreaPercentages: Area,\n  mediaSize: MediaSize,\n  rotation: number,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n) {\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  // This is the inverse process of computeCroppedArea\n  const zoom = clamp(\n    (cropSize.width / mediaBBoxSize.width) * (100 / croppedAreaPercentages.width),\n    minZoom,\n    maxZoom\n  )\n\n  const crop = {\n    x:\n      (zoom * mediaBBoxSize.width) / 2 -\n      cropSize.width / 2 -\n      mediaBBoxSize.width * zoom * (croppedAreaPercentages.x / 100),\n    y:\n      (zoom * mediaBBoxSize.height) / 2 -\n      cropSize.height / 2 -\n      mediaBBoxSize.height * zoom * (croppedAreaPercentages.y / 100),\n  }\n\n  return { crop, zoom }\n}\n\n/**\n * Compute zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize: Size\n): number {\n  const mediaZoom = getMediaZoom(mediaSize)\n\n  return cropSize.height > cropSize.width\n    ? cropSize.height / (croppedAreaPixels.height * mediaZoom)\n    : cropSize.width / (croppedAreaPixels.width * mediaZoom)\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  rotation = 0,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n): { crop: Point; zoom: number } {\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  const zoom = clamp(\n    getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize),\n    minZoom,\n    maxZoom\n  )\n\n  const cropZoom =\n    cropSize.height > cropSize.width\n      ? cropSize.height / croppedAreaPixels.height\n      : cropSize.width / croppedAreaPixels.width\n\n  const crop = {\n    x:\n      ((mediaNaturalBBoxSize.width - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y:\n      ((mediaNaturalBBoxSize.height - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) *\n      cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\nexport function getRadianAngle(degreeValue: number) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width: number, height: number, rotation: number): Size {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width: Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height: Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * Clamp value between min and max\n */\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter((value) => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport normalizeWheel from 'normalize-wheel'\nimport { Area, MediaSize, Point, Size, VideoSrc } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  getInitialCropFromCroppedAreaPercentages,\n  classNames,\n  clamp,\n} from './helpers'\nimport cssStyles from './styles.css'\n\nexport type CropperProps = {\n  image?: string\n  video?: string | VideoSrc[]\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  objectFit?: 'contain' | 'cover' | 'horizontal-cover' | 'vertical-cover'\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropAreaChange?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropSizeChange?: (cropSize: Size) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n  initialCroppedAreaPixels?: Area\n  initialCroppedAreaPercentages?: Area\n  onTouchRequest?: (e: React.TouchEvent<HTMLDivElement>) => boolean\n  onWheelRequest?: (e: WheelEvent) => boolean\n  setImageRef?: (ref: React.RefObject<HTMLImageElement>) => void\n  setVideoRef?: (ref: React.RefObject<HTMLVideoElement>) => void\n  setMediaSize?: (size: MediaSize) => void\n  setCropSize?: (size: Size) => void\n  nonce?: string\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\ntype GestureEvent = UIEvent & {\n  rotation: number\n  scale: number\n  clientX: number\n  clientY: number\n}\n\nclass Cropper extends React.Component<CropperProps, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect' as const,\n    objectFit: 'contain' as const,\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: React.RefObject<HTMLImageElement> = React.createRef()\n  videoRef: React.RefObject<HTMLVideoElement> = React.createRef()\n  containerPosition: Point = { x: 0, y: 0 }\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  gestureZoomStart = 0\n  gestureRotationStart = 0\n  isTouching = false\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n  currentDoc: Document | null = typeof document !== 'undefined' ? document : null\n  currentWindow: Window | null = typeof window !== 'undefined' ? window : null\n  resizeObserver: ResizeObserver | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    if (!this.currentDoc || !this.currentWindow) return\n    if (this.containerRef) {\n      if (this.containerRef.ownerDocument) {\n        this.currentDoc = this.containerRef.ownerDocument\n      }\n      if (this.currentDoc.defaultView) {\n        this.currentWindow = this.currentDoc.defaultView\n      }\n\n      this.initResizeObserver()\n      // only add window resize listener if ResizeObserver is not supported. Otherwise, it would be redundant\n      if (typeof window.ResizeObserver === 'undefined') {\n        this.currentWindow.addEventListener('resize', this.computeSizes)\n      }\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.onGestureStart as EventListener)\n    }\n\n    this.currentDoc.addEventListener('scroll', this.onScroll);\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = this.currentDoc.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      if (this.props.nonce) {\n        this.styleRef.setAttribute('nonce', this.props.nonce)\n      }\n      this.styleRef.innerHTML = cssStyles\n      this.currentDoc.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef.current && this.imageRef.current.complete) {\n      this.onMediaLoad()\n    }\n\n    // set image and video refs in the parent if the callbacks exist\n    if (this.props.setImageRef) {\n      this.props.setImageRef(this.imageRef)\n    }\n\n    if (this.props.setVideoRef) {\n      this.props.setVideoRef(this.videoRef)\n    }\n\n  }\n\n  componentWillUnmount() {\n    if (!this.currentDoc || !this.currentWindow) return\n    if (typeof window.ResizeObserver === 'undefined') {\n      this.currentWindow.removeEventListener('resize', this.computeSizes)\n    }\n    this.resizeObserver?.disconnect()\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.parentNode?.removeChild(this.styleRef)\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: CropperProps) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.objectFit !== this.props.objectFit) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    } else if (\n      prevProps.crop?.x !== this.props.crop?.x ||\n      prevProps.crop?.y !== this.props.crop?.y\n    ) {\n      this.emitCropAreaChange()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n    if (prevProps.video !== this.props.video) {\n      this.videoRef.current?.load()\n    }\n  }\n\n  initResizeObserver = () => {\n    if (typeof window.ResizeObserver === 'undefined' || !this.containerRef) {\n      return\n    }\n    let isFirstResize = true\n    this.resizeObserver = new window.ResizeObserver((entries) => {\n      if (isFirstResize) {\n        isFirstResize = false // observe() is called on mount, we don't want to trigger a recompute on mount\n        return\n      }\n      this.computeSizes()\n    })\n    this.resizeObserver.observe(this.containerRef)\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    if (!this.currentDoc) return\n    this.currentDoc.removeEventListener('mousemove', this.onMouseMove)\n    this.currentDoc.removeEventListener('mouseup', this.onDragStopped)\n    this.currentDoc.removeEventListener('touchmove', this.onTouchMove)\n    this.currentDoc.removeEventListener('touchend', this.onDragStopped)\n    this.currentDoc.removeEventListener('gesturemove', this.onGestureMove as EventListener)\n    this.currentDoc.removeEventListener('gestureend', this.onGestureEnd as EventListener)\n    this.currentDoc.removeEventListener('scroll', this.onScroll);\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    const cropSize = this.computeSizes()\n\n    if (cropSize) {\n      this.emitCropData()\n      this.setInitialCrop(cropSize)\n    }\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = (cropSize: Size) => {\n    if (this.props.initialCroppedAreaPercentages) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPercentages(\n        this.props.initialCroppedAreaPercentages,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    } else if (this.props.initialCroppedAreaPixels) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n        this.props.initialCroppedAreaPixels,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    }\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  getObjectFit() {\n    if (this.props.objectFit === 'cover') {\n      const mediaRef = this.imageRef.current || this.videoRef.current\n\n      if (mediaRef && this.containerRef) {\n        this.containerRect = this.containerRef.getBoundingClientRect()\n        const containerAspect = this.containerRect.width / this.containerRect.height\n        const naturalWidth =\n          this.imageRef.current?.naturalWidth || this.videoRef.current?.videoWidth || 0\n        const naturalHeight =\n          this.imageRef.current?.naturalHeight || this.videoRef.current?.videoHeight || 0\n        const mediaAspect = naturalWidth / naturalHeight\n\n        return mediaAspect < containerAspect ? 'horizontal-cover' : 'vertical-cover'\n      }\n      return 'horizontal-cover'\n    }\n\n    return this.props.objectFit\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef.current || this.videoRef.current\n\n    if (mediaRef && this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n      this.saveContainerPosition()\n      const containerAspect = this.containerRect.width / this.containerRect.height\n      const naturalWidth =\n        this.imageRef.current?.naturalWidth || this.videoRef.current?.videoWidth || 0\n      const naturalHeight =\n        this.imageRef.current?.naturalHeight || this.videoRef.current?.videoHeight || 0\n      const isMediaScaledDown =\n        mediaRef.offsetWidth < naturalWidth || mediaRef.offsetHeight < naturalHeight\n      const mediaAspect = naturalWidth / naturalHeight\n\n      // We do not rely on the offsetWidth/offsetHeight if the media is scaled down\n      // as the values they report are rounded. That will result in precision losses\n      // when calculating zoom. We use the fact that the media is positionned relative\n      // to the container. That allows us to use the container's dimensions\n      // and natural aspect ratio of the media to calculate accurate media size.\n      // However, for this to work, the container should not be rotated\n      let renderedMediaSize: Size\n\n      if (isMediaScaledDown) {\n        const objectFit = this.getObjectFit()\n        switch (objectFit) {\n          default:\n          case 'contain':\n            renderedMediaSize =\n              containerAspect > mediaAspect\n                ? {\n                    width: this.containerRect.height * mediaAspect,\n                    height: this.containerRect.height,\n                  }\n                : {\n                    width: this.containerRect.width,\n                    height: this.containerRect.width / mediaAspect,\n                  }\n            break\n          case 'horizontal-cover':\n            renderedMediaSize = {\n              width: this.containerRect.width,\n              height: this.containerRect.width / mediaAspect,\n            }\n            break\n          case 'vertical-cover':\n            renderedMediaSize = {\n              width: this.containerRect.height * mediaAspect,\n              height: this.containerRect.height,\n            }\n            break\n        }\n      } else {\n        renderedMediaSize = {\n          width: mediaRef.offsetWidth,\n          height: mediaRef.offsetHeight,\n        }\n      }\n\n      this.mediaSize = {\n        ...renderedMediaSize,\n        naturalWidth,\n        naturalHeight,\n      }\n\n      // set media size in the parent\n      if (this.props.setMediaSize) {\n        this.props.setMediaSize(this.mediaSize)\n      }\n\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            this.mediaSize.width,\n            this.mediaSize.height,\n            this.containerRect.width,\n            this.containerRect.height,\n            this.props.aspect,\n            this.props.rotation\n          )\n\n      if (\n        this.state.cropSize?.height !== cropSize.height ||\n        this.state.cropSize?.width !== cropSize.width\n      ) {\n        this.props.onCropSizeChange && this.props.onCropSizeChange(cropSize)\n      }\n      this.setState({ cropSize }, this.recomputeCropPosition)\n      // pass crop size to parent\n      if (this.props.setCropSize) {\n        this.props.setCropSize(cropSize)\n      }\n\n      return cropSize\n    }\n  }\n\n  saveContainerPosition = () => {\n    if (this.containerRef) {\n      const bounds = this.containerRef.getBoundingClientRect()\n      this.containerPosition = { x: bounds.left, y: bounds.top }\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent | GestureEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!this.currentDoc) return\n    e.preventDefault()\n    this.currentDoc.addEventListener('mousemove', this.onMouseMove)\n    this.currentDoc.addEventListener('mouseup', this.onDragStopped)\n    this.saveContainerPosition()\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onScroll = (e: Event) => {\n    if (!this.currentDoc) return\n    e.preventDefault()\n    this.saveContainerPosition()\n  }\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (!this.currentDoc) return\n    this.isTouching = true\n    if (this.props.onTouchRequest && !this.props.onTouchRequest(e)) {\n      return\n    }\n\n    this.currentDoc.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    this.currentDoc.addEventListener('touchend', this.onDragStopped)\n    \n    this.saveContainerPosition()\n\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onGestureStart = (e: GestureEvent) => {\n    if (!this.currentDoc) return\n    e.preventDefault()\n    this.currentDoc.addEventListener('gesturechange', this.onGestureMove as EventListener)\n    this.currentDoc.addEventListener('gestureend', this.onGestureEnd as EventListener)\n    this.gestureZoomStart = this.props.zoom\n    this.gestureRotationStart = this.props.rotation\n  }\n\n  onGestureMove = (e: GestureEvent) => {\n    e.preventDefault()\n    if (this.isTouching) {\n      // this is to avoid conflict between gesture and touch events\n      return\n    }\n\n    const point = Cropper.getMousePoint(e)\n    const newZoom = this.gestureZoomStart - 1 + e.scale\n    this.setNewZoom(newZoom, point, { shouldUpdatePosition: true })\n    if (this.props.onRotationChange) {\n      const newRotation = this.gestureRotationStart + e.rotation\n      this.props.onRotationChange(newRotation)\n    }\n  }\n\n  onGestureEnd = (e: GestureEvent) => {\n    this.cleanEvents()\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (!this.currentWindow) return\n    if (this.rafDragTimeout) this.currentWindow.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = this.currentWindow.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.isTouching = false\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    if (!this.currentDoc || !this.currentWindow) return\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) this.currentWindow.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = this.currentWindow.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center, { shouldUpdatePosition: false })\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    if (!this.currentWindow) return\n    if (this.props.onWheelRequest && !this.props.onWheelRequest(e)) {\n      return\n    }\n\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const { pixelY } = normalizeWheel(e)\n    const newZoom = this.props.zoom - (pixelY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point, { shouldUpdatePosition: true })\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = this.currentWindow.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point, containerTopLeft: Point): Point => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - containerTopLeft.x),\n      y: this.containerRect.height / 2 - (y - containerTopLeft.y),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point, { shouldUpdatePosition = true } = {}) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const newZoom = clamp(zoom, this.props.minZoom, this.props.maxZoom)\n\n    if (shouldUpdatePosition) {\n      const zoomPoint = this.getPointOnContainer(point, this.containerPosition)\n      const zoomTarget = this.getPointOnMedia(zoomPoint)\n      const requestedPosition = {\n        x: zoomTarget.x * newZoom - zoomPoint.x,\n        y: zoomTarget.y * newZoom - zoomPoint.y,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            newZoom,\n            this.props.rotation\n          )\n        : requestedPosition\n\n      this.props.onCropChange(newPosition)\n    }\n    this.props.onZoomChange(newZoom)\n  }\n\n  getCropData = () => {\n    if (!this.state.cropSize) {\n      return null\n    }\n\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ValentinH/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    return computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n  }\n\n  emitCropData = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropComplete) {\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n    }\n\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  emitCropAreaChange = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n    } = this.props\n\n    const objectFit = this.getObjectFit()\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={(el) => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames(\n              'reactEasyCrop_Image',\n              objectFit === 'contain' && 'reactEasyCrop_Contain',\n              objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n              objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n              mediaClassName\n            )}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={this.imageRef}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames(\n                'reactEasyCrop_Video',\n                objectFit === 'contain' && 'reactEasyCrop_Contain',\n                objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n                objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n                mediaClassName\n              )}\n              {...mediaProps}\n              ref={this.videoRef}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            >\n              {(Array.isArray(video) ? video : [{ src: video }]).map((item) => (\n                <source key={item.src} {...item} />\n              ))}\n            </video>\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"],"names":["getCropSize","mediaWidth","mediaHeight","containerWidth","containerHeight","aspect","rotation","_a","rotateSize","width","height","fittingWidth","Math","min","fittingHeight","getMediaZoom","mediaSize","naturalWidth","naturalHeight","restrictPosition","position","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","clamp","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","mediaBBoxSize","mediaNaturalBBoxSize","croppedAreaPercentages","widthInPixels","round","heightInPixels","isImgWiderThanHigh","sizePixels","croppedAreaPixels","__assign","max","value","_max","getInitialCropFromCroppedAreaPercentages","minZoom","maxZoom","getZoomFromCroppedAreaPixels","mediaZoom","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","getRadianAngle","degreeValue","rotRad","abs","cos","sin","classNames","args","_i","arguments","length","filter","join","trim","MIN_ZOOM","MAX_ZOOM","Cropper","_super","__extends","_this","apply","imageRef","React","createRef","videoRef","containerPosition","containerRef","styleRef","containerRect","dragStartPosition","dragStartCrop","gestureZoomStart","gestureRotationStart","isTouching","lastPinchDistance","lastPinchRotation","rafDragTimeout","rafPinchTimeout","wheelTimer","currentDoc","document","currentWindow","window","resizeObserver","state","hasWheelJustStarted","initResizeObserver","ResizeObserver","isFirstResize","entries","computeSizes","observe","preventZoomSafari","e","preventDefault","cleanEvents","removeEventListener","onMouseMove","onDragStopped","onTouchMove","onGestureMove","onGestureEnd","onScroll","clearScrollEvent","onWheel","clearTimeout","onMediaLoad","emitCropData","setInitialCrop","props","onMediaLoaded","initialCroppedAreaPercentages","onCropChange","onZoomChange","initialCroppedAreaPixels","_b","mediaRef","current","getBoundingClientRect","saveContainerPosition","containerAspect","videoWidth","_c","_d","videoHeight","isMediaScaledDown","offsetWidth","offsetHeight","mediaAspect","renderedMediaSize","objectFit","getObjectFit","setMediaSize","_e","_f","onCropSizeChange","setState","recomputeCropPosition","setCropSize","bounds","left","top","onMouseDown","addEventListener","onDragStart","getMousePoint","onDrag","onTouchStart","onTouchRequest","passive","touches","onPinchStart","getTouchPoint","onPinchMove","onGestureStart","point","newZoom","scale","setNewZoom","shouldUpdatePosition","onRotationChange","newRotation","onInteractionStart","cancelAnimationFrame","requestAnimationFrame","undefined","offsetX","offsetY","requestedPosition","newPosition","onInteractionEnd","onWheelRequest","pixelY","normalizeWheel","zoomSpeed","call","setTimeout","getPointOnContainer","containerTopLeft","Error","getPointOnMedia","zoomPoint","zoomTarget","getCropData","restrictedPosition","getAspect","cropData","onCropComplete","onCropAreaChange","emitCropAreaChange","prototype","componentDidMount","ownerDocument","defaultView","zoomWithScroll","disableAutomaticStylesInjection","createElement","setAttribute","nonce","innerHTML","cssStyles","head","appendChild","complete","setImageRef","setVideoRef","componentWillUnmount","disconnect","parentNode","removeChild","componentDidUpdate","prevProps","_g","_h","video","_j","load","center","distance","render","image","mediaProps","transform","cropShape","showGrid","style","containerStyle","cropAreaStyle","mediaStyle","classes","containerClassName","cropAreaClassName","mediaClassName","ref","el","className","alt","src","concat","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","Array","isArray","map","item","key","defaultProps","Number","clientX","clientY","touch","Component"],"mappings":"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"}